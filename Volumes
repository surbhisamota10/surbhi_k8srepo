https://kubernetes.io/docs/concepts/storage/persistent-volumes/

NFS servre will be another server not master node

First we need to setup a network volume or storage server
Like : NFS

yum install nfs -y

create a directory 
mkdir -p /common/volume

chmod -R 777 /common/volume

vi /etc/exports
 /common/volume  *(no_root_squash,rw,sync)

systemctl start nfs-server
systemctl enable nfs-server

if firewall active then add the service in it 
firewall-cmd --list-all
firewall-cmd --permanent --zone=public --add-service=nfs
firewall-cmd --relaod

exportfs -y

Now on master node we need to create a persistent volume (pv)

root@master:~# cat pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: reliance-volume
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: reliance-volume
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /common/volume
    server: 65.0.107.51

{
learn about accessModes from k8s documentation:

persistentVolumeReclaimPolicy: Recycle ( recycle means if we delete data from pvc then it delete from pv also
persistentVolumeReclaimPolicy: Retain ( retain means if we delete data from pvc then it dosent delete from pv )

storageClassName:  it means put your PV name because we have no of pv's .

 path: /common/volume  ( nfs server path)
 server: 65.0.107.51 ( nfs server IP)
}

kubectl get pv

Now create a pvc 

root@master:~# cat pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: reliance-power
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 3Gi
  storageClassName: reliance-volume

kubectl get pvc 
kubectl get pv


*** Now need to create an deployment and install wordpress on it****

apiVersion: v1
kind: Service
metadata:
  name: wordpress-mysql
  labels:
    app: wordpress
spec:
  ports:
    - port: 3306
  selector:
    app: wordpress
    tier: mysql
  clusterIP: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-mysql
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: mysql
    spec:
      containers:
      - image: mysql:8.0
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: redhat@123
        - name: MYSQL_DATABASE
          value: wordpress
        - name: MYSQL_USER
          value: wordpress
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: reliance-power
        persistentVolumeClaim:
          claimName: mysql-pv-claim



kubectl apply -f wordpress.yaml

kubectl get pods 

kubectl exec -it mysql_podname /bin/bash
 show databases
 create database surbhidb;

kubectl delete pod podname;
NOW open a another terminal and delete this pod according to deployment again a new pod will create  due to replica 
and and pv create to that new pod and 

kubectl exec -it new_pod_name
mysql -u root -p
and your data is available here 
